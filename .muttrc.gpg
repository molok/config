set pgp_sign_as='0xFE0270FB'
    # what key do you want to use to sign outgoing messages?

set pgp_timeout=60

    # delete pass phrase from the memory cache <n> seconds
    # after typing it. (2)
    # (2) depending on the number of messages that we sign or decrypt, we would like to maintain the pass phrase in cache memory more or less time. This option avoid you from type the pass phrase each time you sign a new message or decrypt an incoming message. Warning: maintaining the pass phrase in cache memory is not secure, specially in network connected systems.


set pgp_strict_enc

    # use "quoted-printable" when PGP requires it.

unset pgp_long_ids

    # Do not use 64 bits key ids, use 32 bits key ids.

set pgp_decode_command="gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
set pgp_verify_command="gpg --no-verbose --batch --output - --verify %s %f 2>&1| grep -Eo \"gpg: (Can't check|Good|BAD) signature\""
set pgp_decrypt_command="gpg --passphrase-fd 0 --no-verbose --batch --output - %f"
set pgp_sign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_only_command="/opt/local/bin/pgpewrap /opt/local/bin/gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f" 

set pgp_encrypt_sign_command="/opt/local/bin/pgpewrap gpg %?p?--passphrase-fd 0? --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f" 

set pgp_import_command="gpg --no-verbose --import -v %f"
set pgp_export_command="gpg --no-verbose --export --armor %r"
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command="gpg --no-verbose --batch --with-colons --list-keys %r" 
set pgp_list_secring_command="gpg --no-verbose --batch --with-colons --list-secret-keys %r" 

# it's a regexp used against the GPG output: if it matches some line of the output
# # then mutt considers the message a good signed one (ignoring the GPG exit code)
set pgp_good_sign="^gpg: Good signature"
 
# # mutt uses by default PGP/GPG to sign/encrypt messages
# # if you want to use S-mime instead set the smime_is_default variable to yes
 
# # automatically sign all outcoming messages
set crypt_autosign

# # sign only replies to signed messages
set crypt_replysign

# # automatically encrypt outcoming messages
#set crypt_autoencrypt=yes

# # encrypt only replies to signed messages
set crypt_replyencrypt=yes

# # encrypt and sign replies to encrypted messages
#set crypt_replysignencrypt=yes

# # automatically verify the sign of a message when opened
set crypt_verify_sig=yes

set pgp_ignore_subkeys #ignora le subkeys

# in questo modo archivio le mail inviate, in maniera non criptata/firmata
set fcc_clear=yes 

# set pgp_getkeys_command="gpg --recv-keys %r 2> /dev/null
